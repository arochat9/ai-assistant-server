"""initial migration

Revision ID: 958721de150a
Revises: 
Create Date: 2025-06-20 00:05:14.331941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '958721de150a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chats',
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('chat_display_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('chat_id')
    )
    op.create_index(op.f('ix_chats_chat_id'), 'chats', ['chat_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('chat_users',
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.chat_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('chat_id', 'user_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.String(), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('time_received', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('user_info_struct', sa.JSON(), nullable=True),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('is_spam', sa.Boolean(), nullable=False),
    sa.Column('replied_to_fk', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('UNPROCESSED', 'READY_FOR_AGENT', 'AGENT_PROCESSING', 'PROCESSED', name='messagestatus'), nullable=False),
    sa.Column('text_character_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.chat_id'], ),
    sa.ForeignKeyConstraint(['replied_to_fk'], ['messages.message_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_index(op.f('ix_messages_message_id'), 'messages', ['message_id'], unique=False)
    op.create_table('agent_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('log_type', sa.Enum('THOUGHT', 'ACTION', 'OBSERVATION', 'DECISION', 'ERROR', name='agentlogtype'), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', name='agentloglevel'), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('source_message_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['source_message_id'], ['messages.message_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_logs_id'), 'agent_logs', ['id'], unique=False)
    op.create_index(op.f('ix_agent_logs_session_id'), 'agent_logs', ['session_id'], unique=False)
    op.create_table('tasks',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('task_name', sa.String(), nullable=False),
    sa.Column('task_context', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'BACKLOGGED', name='taskstatus'), nullable=True),
    sa.Column('task_or_event', sa.Enum('TASK', 'EVENT', name='taskorevent'), nullable=False),
    sa.Column('event_start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('task_due_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('task_type', sa.Enum('FUN', 'TEXT_RESPONSE', 'CHORE', 'ERRAND', name='tasktype'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('source_message_id', sa.String(), nullable=True),
    sa.Column('created_by_agent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_message_id'], ['messages.message_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_tasks_task_id'), 'tasks', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_task_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_agent_logs_session_id'), table_name='agent_logs')
    op.drop_index(op.f('ix_agent_logs_id'), table_name='agent_logs')
    op.drop_table('agent_logs')
    op.drop_index(op.f('ix_messages_message_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_table('chat_users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_chats_chat_id'), table_name='chats')
    op.drop_table('chats')
    # ### end Alembic commands ###
